Know the Concepts:

• <b>Describe the fetch-execute cycle.</b>
    - It is essentialy the process of reading the memory intructions one at a time, and executing it.
    - The following is the outline of the process:
        1. Read the program counter for the next address containing an instruction.
	2. Decode the fetched instruction, which decides what operation that needs to be done.
	3. Use the databus to fetch involved memory locations
	4. Pass the fetched data to the logic and arithmetic unit for execution.


• What is a register? How would computation be more difficult without registers?
    - A register is a location where we process the fetched data.
    - It would be more difficult to decide what memory to dedicate to execution.
  
• How do you represent numbers larger than 255?
    - Since we use a byte or 8 bits to represent 0-255 on each address, we will need to occupy and combine 
      more than one address to represent larger numbers.
  
• How big are the registers on the machines we will be using?
    - Since we will be using an x86 architecture, the registers will be 4 bytes or 1 word long.
    - Conversely, should we use an x64 architecture, then we would be able to use 8 bytes or 2 words long registers.
 
• How does a computer know how to interpret a given byte or set of bytes of memory?
    - Inherently it doesn't know, since all values are stored equal and the way in which we access them,
      determines what it does.
 
• What are the addressing modes and what are they used for?
    - Immidiate mode:
        -> ... 
    - Register addressing mode:
    - Direct addressing mode:
    - Indirect addressing mode:
    - Indexed addressing mode:
    - Base pointer addressing mode

• What does the instruction pointer do?

Use the Concepts

• What data would you use in an employee record? How would you lay it out in memory?
• If I had the pointer the the beginning of the employee record above, and wanted to access a
  particular piece of data inside of it, what addressing mode would I use?
• In base pointer addressing mode, if you have a register holding the value 3122, and an offset of
  20, what address would you be trying to access?
• In indexed addressing mode, if the base address is 6512, the index register has a 5, and the
  multiplier is 4, what address would you be trying to access?
• In indexed addressing mode, if the base address is 123472, the index register has a 0, and the
  multiplier is 4, what address would you be trying to access?
• In indexed addressing mode, if the base address is 9123478, the index register has a 20, and the
  multiplier is 1, what address would you be trying to access?

Going Further
• What are the minimum number of addressing modes needed for computation?
• Why include addressing modes that aren’t strictly needed?
• Research and then describe how pipelining (or one of the other complicating factors) affects
the fetch-execute cycle.
• Research and then describe the tradeoffs between fixed-length instructions and variable-length
instructions.
